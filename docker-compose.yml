version: '3.9'
name: typesence_mongo
networks:
    typesence_mongo_network:
        driver: bridge
services:
    mongo:
        build:
            dockerfile: .docker/mongo/Dockerfile
        container_name: typesence-mongo-db
        restart: always
        environment:
            MONGO_INITDB_ROOT_USERNAME: $MONGO_USERNAME
            MONGO_INITDB_ROOT_PASSWORD: $MONGO_PASSWORD
        ports:
            - '${MONGO_PORT}:27017'
        command: --replSet rs0 --keyFile /etc/mongo-keyfile --bind_ip_all --port $MONGO_PORT
        healthcheck:
            test: echo "
                try { rs.status() }
                catch (err) {
                    rs.initiate({
                        _id:'rs0',
                        members:[
                            { _id:0, host:'127.0.0.1:27017' }
                        ]
                    })
                }" | mongosh --port $MONGO_PORT -u $MONGO_USERNAME -p $MONGO_PASSWORD --authenticationDatabase admin
            interval: 5s
            timeout: 15s
            start_period: 15s
            retries: 10
        networks:
            - typesence_mongo_network
        volumes:
            - typesence_mongo:/data/db
    typesense:
        image: typesense/typesense:27.0.rc2
        container_name: typesense-data-search
        ports:
            - '${TYPESENSE_PORT}:8108'
        volumes:
            - typesense-data:/data
        command: '--data-dir /data --api-key=${TYPESENSE_API_KEY} --enable-cors'
        networks:
            - typesence_mongo_network
#    api:
#        container_name: beat_layoff_api
#        build:
#            context: .
#            dockerfile: .docker/api/Dockerfile
#        environment:
#            - 'NODE_ENV=${NODE_ENV}'
#            - 'WAIT_HOSTS=${MONGO_HOST}:${MONGO_PORT}'
#        depends_on:
#            mongo:
#                condition: service_healthy
#        networks:
#            - beat_layoff_network
#        volumes:
#            - ./src:/usr/src/app/src
#        ports:
#            - '${API_PORT}:${API_PORT}'
#        expose:
#            - '${API_PORT}'
#        command: 'yarn start:build'

volumes:
    typesense-data:
    typesence_mongo:
